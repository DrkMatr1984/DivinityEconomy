DivinityEconomy Config Information
DivinityEconomy Github: https://github.com/EDGRRRRs/DivinityEconomy
DivinityEconomyLite Github: https://github.com/EDGRRRRs/DivinityEconomyLite
Plugin author: EDGRRRR
Author Github: https://github.com/EDGRRRRs
Contributors:
    - ExRider111Ryan: https://github.com/RyanA3

Officially supported versions: 1.16.5, 1.17
API version: 1.16 (likely means versions below 1.16 will refuse to work)

Colours for the chat config can be found here: https://jd.bukkit.org/org/bukkit/ChatColor.html
&0 - Black
&1 - Dark Blue
&2 - Dark Green
&3 - Dark Cyan
&4 - Dark Red
&5 - Dark Purple
&6 - Gold
&7 - Light Gray
&8 - Dark Gray
&9 - Indigo
&A - Lime Green
&B - Cyan
&C - Red
&D - Pink
&E - Yellow
&F - White


PlaceholderAPI support - Requires PlaceholderAPI to be installed, which can be found on spigot:
%de_material_inflation%                        | The material market inflation double
%de_material_total_quantity%                   | The material market item quantity
%de_material_total__default_quantity%          | The material market default item quantity
%de_enchant_inflation%                         | The enchant market inflation double
%de_enchant_total_quantity%                    | The enchant market item quantity
%de_enchant_total__default_quantity%           | The enchant market default item quantity
%de_format_money_<valueToFormat>%              | Returns a DE money formatted message - This supports bracket variables such as format_money_{placeholderapi_variable}
%de_balance_math_<expression>_<value>%         | Returns a DE formatted value of the player's balance <operator> <value> - for example: math_+_1000 - returns player balance + 1000
%de_raw_balance_math_<expression>_<value>%     | Returns a raw value of the player's balance <operator> <value> - for example: math_+_1000 - returns player balance + 1000
%de_raw_player_balance%                        | Returns a raw value of the player's balance
%de_player_balance%                            | Returns a DE formatted value of the player's balance
%de_material_SValue_<materialName>_<amount>    | Returns a DE formatted sell value of a material
%de_material_BValue_<materialName>_<amount>    | Returns a DE formatted buy value of a material
%de_raw_material_SValue_<materialName>_<amount>| Returns a raw sell value of a material
%de_raw_material_BValue_<materialName>_<amount>| Returns a raw buy value of a material
%de_material_stock_<materialName>              | Returns the amount of the material in stock
%de_enchant_stock_<enchantName>                | Returns the amount of the enchant in stock
%de_material_stack_<materialName>              | Returns the max stack size for the material given

Config Help - Changing these values will not do anything here. Open config.yml

# Main settings
main:
    # DO NOT TOUCH THIS - Used to track config changes
  version: 1.8.117

# Chat settings
chat:
    # Enables/disables debugging - More verbose descriptions of internal events
  chatDebug: false

    # The console message prefix
    # Variables = <VERSION> - The version of the plugin
  consolePrefix: '&b[DivinityEconomy v<VERSION>]&9> '

    # The in-game chat message prefix
  chatPrefix: '&b[D.E]&9> '

    # Colour of information messages
  infoColour: 'GREEN'

    # Colour of severe messages
  severeColour: 'RED'

    # Colour of warning messages
  warnColour: 'YELLOW'

    # Colour of debugging messages
  debugColour: 'DARK_PURPLE'

    # The number of decimal digits in money values
  moneyScale: 2

    # The prefix symbol for money
  moneyPrefix: "£"

    # Currently used for VAULT -  has no impact on DivinityEconomy
  moneySingular: "Divinity"
  moneyPlural: "Divinity's"

# Message ignore settings - Quiet down spammy messages from the plugin.
messageIgnore:
    # Whether to ignore internal alias warnings
  ignoreAliasErrors: false

    # Whether to ignore internal material warnings
  ignoreMaterialErrors: false

    # Whether to ignore internal enchant warnings
  ignoreEnchantErrors: false

    # Whether to ignore command registry messages
  ignoreCommandRegistry: true

# Economy settings
economy:
    # The minimum amount of cash a user can have in their bank account
  minAccountBalance: 0.0

    # The minimum amount of cash a player can send when using /sendcash
  minSendAmount: 0.01

    # The preferred economy provider, such as EssentialsX and so on.
    # By default 'DivinityEconomy' uses the internal economy provider, regardless of other plugins or Vault's presence.
  preferredProvider: 'DivinityEconomy'

# Market settings
market:
    # The internal save timer for autosaving enchant/material data in seconds.
    # 600 seconds = 10 minutes.
  saveTimer: 600

    # Enchant settings
  enchants:
        # Whether to enable the enchant market or not
    enable: true

        # The base quantity of an enchant.
        # This is the price at which an enchant costs £1 before scaling, inflation and other market scaling is applied.
    baseQuantity: 1000000

        # The scaling to apply to purchases
        # 1.1 means a £1 enchant will cost £1.10 to purchase.
    buyScale: 1.1

        # The scaling to apply to sales
        # 1.0 means a £1 enchant will yield £1.00 when sold.
    sellScale: 1.0
            # This scaling is done to prevent buying and selling the same enchant for easy profit

        # Whether to enable whole market inflation dynamics
        # This works by scaling the price of enchant by the over abundance or lack of enchants in the market.
        # If there is a 10% reduction in enchant in the market, the prices will be scaled inversely.
        # for example, 10% less items = 1.1 * price
    wholeMarketInflation: false

        # Whether to enable dynamic pricing or not
        # Disabling this means that enchant quantities are static and do not change
    dynamicPricing: true

    # Material settings
  materials:
       # Whether to enable the enchant market or not
   enable: true

        # The base quantity of an enchant.
        # This is the price at which an enchant costs £1 before scaling, inflation and other market scaling is applied.
    baseQuantity: 1000000

        # The scaling to apply to purchases
        # 1.1 means a £1 enchant will cost £1.10 to purchase.
    buyScale: 1.1

        # The scaling to apply to sales
        # 1.0 means a £1 enchant will yield £1.00 when sold.
    sellScale: 1.0
        # This scaling is done to prevent buying and selling the same enchant for easy profit

        # Whether to enable whole market inflation dynamics
        # This works by scaling the price of enchant by the over abundance or lack of enchants in the market.
        # If there is a 10% reduction in enchant in the market, the prices will be scaled inversely.
        # for example, 10% less items = 1.1 * price
    wholeMarketInflation: false

        # Whether to enable dynamic pricing or not
        # Disabling this means that enchant quantities are static and do not change
    dynamicPricing: true

        # Whether to enable item damage scaling to sales
        # An item with half HP will sell for half as much
    itemDamageScaling: true

# Command settings
# Setting these values to true will enable the corresponding commands
# Setting these values to false will disable the corresponding commands
commands:
  admin:
    clearBal: true
    editBal: true
    setBal: true
    reloadMaterials: true
    reloadEnchants: true
    setStock: true
    setValue: true
    eSetStock: true
    eSetValue: true
    saveMaterials: true
    saveEnchants: true

  economy:
    balance: true
    sendCash: true

  enchant:
    eBuy: true
    eInfo: true
    eSell: true
    eValue: true
    eHandValue: true

  mail:
    clearMail: true
    readMail: true

  market:
    buyItem: true
    handBuy: true
    handInfo: true
    handSell: true
    handValue: true
    info: true
    sellItem: true
    value: true

  misc:
    ping: true
    ehelp: true
